# This is a basic workflow to help you get started with Actions

name: doc-latest

# Controls when the workflow will run
on:
  # Triggers the workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"] # , 3.8] 
        # Note : form 3.9 need fix for :
        # https://importlib-resources.readthedocs.io/en/latest/using.html#migrating-from-legacy


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Prepare install dependencies
        run: |
          sudo apt-get update
          pip install --upgrade pip
      - name: Prepare GUI
        run: |
         echo "Prepare GUI for pyQt6"
          pip install pyQt6
          # See
          # https://github.com/pytest-dev/pytest-qt/issues/396
          # https://github.com/pytest-dev/pytest-qt/pull/295/files
          # https://github.com/konserw/mre/blob/master/.github/workflows/linux.yml
          # https://moderngl.readthedocs.io/en/5.6.3/techniques/headless_ubuntu_18_server.html
          
          sudo apt-get install xvfb mesa-utils libegl1-mesa
          sudo apt-get install libxkbcommon-x11-0
          sudo apt-get install --reinstall libxcb-xinerama0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0
      - name: Install GMP MPFR MPC needed for gmpy2
        run: |
          sudo apt-get install libgmp-dev
          sudo apt-get install libmpfr-dev
          sudo apt-get install libmpc-dev
      - name: Install Latex
        run: |
          sudo apt-get install dvipng
          sudo apt-get install texlive
          sudo apt-get install texlive-latex-extra
      - name: Install python modules dependencies
        run: |
          pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: install Fractalshades from current commit
        run: |
          python -m pip install git+https://github.com/${{ github.repository }}.git@${{ github.sha }}
      - name: install dependencies to build the documentation
        run: |
          python -m pip install sphinx sphinx_rtd_theme sphinx-gallery numpydoc matplotlib sphinxcontrib-bibtex
      - name: Build documentation
        run: |
          # Build the doc
          # Note: /!\ run with QT_QPA_PLATFORM=offscreen on a headless runner
          make -C docs clean
          # QT_QPA_PLATFORM=offscreen make -C docs html
  
      - name: Push documentation to github pages
        run: |
          git config --global user.email "geoffroy.billotey@gmail.com"
          git config --global user.name "GBillotey"
          docroot=`mktemp -d`
          rsync -av "docs/_build/html/" "${docroot}/"
          pushd "${docroot}"
          # don't bother maintaining history; just generate fresh
          git init
          git remote add deploy "https://token:${{ github.token }}@github.com/${{ github.repository }}.git"
          git checkout -b doc-latest
          git add .
          git commit -am "automatic triggered doc build"
          git push deploy doc-latest --force
          popd
