# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test-windows

on:
#   push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8] #, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # - name: Set up MinGW
    #   uses: egor-tensin/setup-mingw@v2
    #   with:
    #     platform: x64

    - name: Install gmpy2 and adds the headers - creates the .lib files
      run: |
        dir
        python -m pip install --upgrade pip
        # Download and install from https://github.com/msys2
        python -m pip install https://files.pythonhosted.org/packages/8d/6f/b87d79fe5b764b97eb5599c5a8ef351fec3b688201d4706c6146e4601d1d/gmpy2-2.1.2-cp38-cp38-win_amd64.whl

        echo "*** listing MVS folder"
        dir "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\bin\\HostX86\\x64"
        dir "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\bin"

        # echo "adding to path"
        # echo "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\bin\\HostX86\\x64\\" >> $GITHUB_PATH 
        # echo "*** GITHUB_PATH:"
        # echo "$GITHUB_PATH"
        # echo "*** dumpbin command:"
        # cd "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\bin\\HostX86\\x64"
        # dir
        # dumpbin
        # echo "*** lib command:"
        # lib

        # Patch gmpy2 install : add the headers and creates the lib
        echo "**** Running python gmpy2 pathch script"
        python win_build\patch_gmpy2.py

        # C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin\x86_64-w64-mingw32-gcc.exe --version
        # echo "$GITHUB_PATH"
        # echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH
        # echo "*** after ** "
        # echo "Checking mingw32"
        # x86_64-w64-mingw32-gcc.exe --version


    - name: Install dependencies
      run: |
        # echo "install build dependencies \"
        # python -m pip install -r win_build\built_requirements.txt
        echo "install libraries needed for the test"
        python -m pip install flake8 pytest
        echo "install build dependencies /"
        python -m pip install -r win_build/build_requirements.txt
        dir

    - name: Builds Fractalshades
      run: |
        dir
        python setup.py build
        dir
        dir build
        dir dist

    - name: Install Fractalshades from the built wheel
      run: |
        python -m pip install -r requirements.txt
        echo "install fractalshades"
        # python -m pip install --no-deps --no-build-isolation fractalshades
        python3 -m pip install --user --force-reinstall --no-deps ./dist/fractalshades-0.4.0b0-cp38-cp38-linux_x86_64.whl


    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        python -m pytest

